Fixes a crash in ASAN when starting a thread.

The problem is that ThreadDescriptorSizeFallback only handles glibc.
Returning too large of a value here causes the overlapping logic in GetThreadStackAndTls to be triggered, which causes the crash.
Other possible fixes include returning 0, 0 from GetTls or commenting out the tcb_size adjustment for arm.

See: https://github.com/playbit/playbit/issues/19


diff --git a/compiler-rt/lib/sanitizer_common/sanitizer_linux_libcdep.cpp b/compiler-rt/lib/sanitizer_common/sanitizer_linux_libcdep.cpp
index 42013f471..e3cb11f95 100644
--- a/compiler-rt/lib/sanitizer_common/sanitizer_linux_libcdep.cpp
+++ b/compiler-rt/lib/sanitizer_common/sanitizer_linux_libcdep.cpp
@@ -226,5 +226,10 @@ static atomic_uintptr_t thread_descriptor_size;
 
 static uptr ThreadDescriptorSizeFallback() {
+
+#if defined(_LIBCPP_HAS_MUSL_LIBC)
+  return 200; // sizeof(pthread) in pthread_impl.h
+#endif // defined(_LIBCPP_HAS_MUSL_LIBC)
+
 #    if defined(__x86_64__) || defined(__i386__) || defined(__arm__) || \
         SANITIZER_RISCV64
   int major;
