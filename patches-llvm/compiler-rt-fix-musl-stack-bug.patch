Fixes a crash in ASAN when starting a thread.

The problem is that ThreadDescriptorSizeFallback only handles glibc.
Returning too large of a value here causes the overlapping logic in GetThreadStackAndTls to be triggered, which causes the crash.
Other possible fixes include returning 0, 0 from GetTls or commenting out the tcb_size adjustment for arm.

See: https://github.com/playbit/playbit/issues/19


diff --git a/compiler-rt/lib/sanitizer_common/sanitizer_linux_libcdep.cpp b/compiler-rt/lib/sanitizer_common/sanitizer_linux_libcdep.cpp
index 42013f471..e77aecde7 100644
--- a/compiler-rt/lib/sanitizer_common/sanitizer_linux_libcdep.cpp
+++ b/compiler-rt/lib/sanitizer_common/sanitizer_linux_libcdep.cpp
@@ -226,6 +226,11 @@ static atomic_uintptr_t thread_descriptor_size;
 
 static uptr ThreadDescriptorSizeFallback() {
   uptr val = 0;
+
+#ifdef MUSL_VERSION
+  val = 200; // sizeof(pthread) in pthread_impl.h
+#else // MUSL_VERSION
+
 #if defined(__x86_64__) || defined(__i386__) || defined(__arm__)
   int major;
   int minor;
@@ -289,6 +294,9 @@ static uptr ThreadDescriptorSizeFallback() {
 #elif defined(__powerpc64__)
   val = 1776; // from glibc.ppc64le 2.20-8.fc21
 #endif
+
+#endif // MUSL_VERSION
+
   return val;
 }
 
